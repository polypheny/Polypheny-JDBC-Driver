/*
This file contains basic wrapper messages used for the communication between client and server.
Examples for such messages are a response and a request wrapper that are used to wrap a specific response or request message.
Further messages for error responses are included.
 */

syntax = "proto3";

import "polyprism/connection_requests.proto";
import "polyprism/connection_responses.proto";
import "polyprism/meta_requests.proto";
import "polyprism/meta_responses.proto";
import "polyprism/namespace_meta_requests.proto";
import "polyprism/namespace_meta_responses.proto";
import "polyprism/statement_requests.proto";
import "polyprism/statement_responses.proto";
import "polyprism/transaction_requests.proto";
import "polyprism/transaction_responses.proto";
import "polyprism/value.proto";

option java_multiple_files = true;
option java_package = "org.polypheny.db.protointerface.proto";
option java_outer_classname = "ProtoInterfaceProto";

package polypheny.protointerface;

/*
Wrapper message wrapping a specific request message to be sent to the server.
 */
message Request {
  // The id of the request.  Must be strictly greater than 0.
  uint64 id = 1;
  oneof type {
    DbmsVersionRequest dbms_version_request = 2;
    LanguageRequest language_request = 3;
    DatabasesRequest databases_request = 4;
    TableTypesRequest table_types_request = 5;
    TypesRequest types_request = 6;
    UserDefinedTypesRequest user_defined_types_request = 7;
    ClientInfoPropertyMetaRequest client_info_property_meta_request = 8;
    ProceduresRequest procedures_request = 9;
    FunctionsRequest functions_request = 10;
    NamespacesRequest namespaces_request = 11;
    NamespaceRequest namespace_request = 12;
    EntitiesRequest entities_request = 13;
    SqlStringFunctionsRequest sql_string_functions_request = 14;
    SqlSystemFunctionsRequest sql_system_functions_request = 15;
    SqlTimeDateFunctionsRequest sql_time_date_functions_request = 16;
    SqlNumericFunctionsRequest sql_numeric_functions_request = 17;
    SqlKeywordsRequest sql_keywords_request = 18;
    ConnectionRequest connection_request = 19;
    ConnectionCheckRequest connection_check_request = 20;
    DisconnectRequest disconnect_request = 21;
    ClientInfoPropertiesRequest client_info_properties_request = 22;
    ClientInfoProperties set_client_info_properties_request = 23;
    ExecuteUnparameterizedStatementRequest execute_unparameterized_statement_request = 24;
    ExecuteUnparameterizedStatementBatchRequest execute_unparameterized_statement_batch_request = 25;
    PrepareStatementRequest prepare_indexed_statement_request = 26;
    ExecuteIndexedStatementRequest execute_indexed_statement_request = 27;
    ExecuteIndexedStatementBatchRequest execute_indexed_statement_batch_request = 28;
    PrepareStatementRequest prepare_named_statement_request = 29;
    ExecuteNamedStatementRequest execute_named_statement_request = 30;
    FetchRequest fetch_request = 31;
    CloseStatementRequest close_statement_request = 32;
    CommitRequest commit_request = 33;
    RollbackRequest rollback_request = 34;
    ConnectionPropertiesUpdateRequest connection_properties_update_request = 35;
  }
}

/*
Response message sent to the client by the server in case of an error.
 */
message ErrorResponse {
  // Human readable error message
  string message = 1;
}

/*
Wrapper message wrapping a specific response message to be sent to the client.
 */
message Response {
  // The id of the request this response is related to.
  uint64 id = 1;
  // If a request triggers a stream of responses from the server, this flag represents a response to be the end of the stream.
  bool last = 2;
  oneof type {
    ErrorResponse error_response = 256;
    DbmsVersionResponse dbms_version_response = 3;
    LanguageResponse language_response = 4;
    DatabasesResponse databases_response = 24;
    TableTypesResponse table_types_response = 5;
    TypesResponse types_response = 26;
    UserDefinedTypesResponse user_defined_types_response = 6;
    ClientInfoPropertyMetaResponse client_info_property_meta_response = 27;
    ProceduresResponse procedures_response = 7;
    FunctionsResponse functions_response = 29;
    NamespacesResponse namespaces_response = 8;
    EntitiesResponse entities_response = 9;
    MetaStringResponse sql_string_functions_response = 10;
    MetaStringResponse sql_system_functions_response = 11;
    MetaStringResponse sql_time_date_functions_response = 30;
    MetaStringResponse sql_numeric_functions_response = 31;
    MetaStringResponse sql_keywords_response = 32;
    ConnectionResponse connection_response = 12;
    ConnectionCheckResponse connection_check_response = 25;
    DisconnectResponse disconnect_response = 13;
    ClientInfoProperties client_info_properties_response = 33;
    ClientInfoPropertiesResponse set_client_info_properties_response = 14;
    StatementResponse statement_response = 15;
    StatementBatchResponse statement_batch_response = 16;
    StatementResult statement_result = 17;
    PreparedStatementSignature prepared_statement_signature = 18;
    Frame frame = 19;
    CloseStatementResponse close_statement_response = 20;
    CommitResponse commit_response = 21;
    RollbackResponse rollback_response = 22;
    ConnectionPropertiesUpdateResponse connection_properties_update_response = 23;
  }
}

service ProtoInterface {
  // Meta functions
  rpc GetDbmsVersion(DbmsVersionRequest) returns (DbmsVersionResponse) {}
  rpc GetSupportedLanguages(LanguageRequest) returns (LanguageResponse) {}
  rpc GetDatabases(DatabasesRequest) returns (DatabasesResponse) {}
  rpc GetTableTypes(TableTypesRequest) returns (TableTypesResponse) {}
  rpc GetTypes(TypesRequest) returns (TypesResponse) {}
  rpc GetUserDefinedTypes(UserDefinedTypesRequest) returns (UserDefinedTypesResponse) {}
  rpc GetClientInfoPropertyMetas(ClientInfoPropertyMetaRequest) returns (ClientInfoPropertyMetaResponse) {}
  rpc SearchProcedures(ProceduresRequest) returns (ProceduresResponse) {}
  rpc SearchFunctions(FunctionsRequest) returns (FunctionsResponse) {}
  rpc SearchNamespaces(NamespacesRequest) returns (NamespacesResponse) {}
  rpc GetNamespace(NamespaceRequest) returns (Namespace) {}
  rpc SearchEntities(EntitiesRequest) returns (EntitiesResponse) {}
  rpc GetSqlStringFunctions(SqlStringFunctionsRequest) returns (MetaStringResponse) {}
  rpc GetSqlSystemFunctions(SqlSystemFunctionsRequest) returns (MetaStringResponse) {}
  rpc GetSqlTimeDateFunctions(SqlTimeDateFunctionsRequest) returns (MetaStringResponse) {}
  rpc GetSqlNumericFunctions(SqlNumericFunctionsRequest) returns (MetaStringResponse) {}
  rpc GetSqlKeywords(SqlKeywordsRequest) returns (MetaStringResponse) {}
  // Connection related
  rpc Connect(ConnectionRequest) returns (ConnectionResponse) {}
  rpc CheckConnection(ConnectionCheckRequest) returns (ConnectionCheckResponse) {}
  rpc Disconnect(DisconnectRequest) returns (DisconnectResponse) {}
  rpc GetClientInfoProperties(ClientInfoPropertiesRequest) returns (ClientInfoProperties) {}
  rpc SetClientInfoProperties(ClientInfoProperties) returns (ClientInfoPropertiesResponse) {}
  // Unparameterized statements
  rpc ExecuteUnparameterizedStatement(ExecuteUnparameterizedStatementRequest) returns (stream StatementResponse) {}
  rpc ExecuteUnparameterizedStatementBatch(ExecuteUnparameterizedStatementBatchRequest) returns (stream StatementBatchResponse) {}
  // Prepared Statements
  rpc PrepareIndexedStatement(PrepareStatementRequest) returns (PreparedStatementSignature) {}
  rpc ExecuteIndexedStatement(ExecuteIndexedStatementRequest) returns (StatementResult) {}
  rpc ExecuteIndexedStatementBatch(ExecuteIndexedStatementBatchRequest) returns (StatementBatchResponse) {}
  rpc PrepareNamedStatement(PrepareStatementRequest) returns (PreparedStatementSignature) {}
  rpc ExecuteNamedStatement(ExecuteNamedStatementRequest) returns (StatementResult) {}
  // ExecuteNamedStatementBatch ?
  // Results
  rpc FetchResult(FetchRequest) returns (Frame) {}
  // Transaction handling
  rpc CloseStatement(CloseStatementRequest) returns (CloseStatementResponse) {}
  rpc CommitTransaction(CommitRequest) returns (CommitResponse) {}
  rpc RollbackTransaction(RollbackRequest) returns (RollbackResponse) {}
  // Properties
  rpc UpdateConnectionProperties(ConnectionPropertiesUpdateRequest) returns (ConnectionPropertiesUpdateResponse) {}
}
