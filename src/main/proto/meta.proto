syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.polypheny.jdbc.proto";
option java_outer_classname = "Meta";

package polypheny.protointerface;

message DbmsVersionRequest{
}

message DbmsVersionResponse{
  string dbms_name = 1;
  string version_name = 2;
  int32 major_version = 3;
  int32 minor_version = 4;
}

message LanguageRequest {}

message LanguageResponse {
  repeated string language_names = 1;
}

message TablesRequest{
  optional string namespace_pattern = 1;
  optional string table_pattern = 2;
  repeated string table_types = 3;
}

message TablesResponse {
  repeated Table tables = 1;
}

message Table {
  string source_database_name = 1;
  string namespace_name = 2;
  string table_name = 3;
  string table_type = 4;
  string owner_name = 5;
}

message ColumnsRequest {
  optional string namespace_pattern = 1;
  optional string table_pattern = 2;
  optional string column_pattern = 3;
}

message ColumnsResponse {
  repeated Column columns = 1;
}

message Column {
  string database_name = 1;
  string namespace_name = 2;
  string table_name = 3;
  string column_name = 4;
  string type_name = 5;
  optional int32 type_length = 6;
  optional int32 type_scale = 7;
  bool is_nullable = 8;
  optional string default_value_as_string = 9;
  int32 column_index = 10;
  optional string collation = 11;
}

message NamespacesRequest {
  optional string namespace_pattern = 1;
}

message NamespacesResponse {
  repeated Namespace namespaces = 1;
}

message Namespace {
  string namespace_name = 1;
  string database_name = 2;
  string owner_name = 3;
  optional string namespace_type = 4;
}

message DatabasesRequest {
}

message DatabasesResponse {
  repeated Database databases = 1;
}

message Database {
  string database_name = 1;
  string owner_name = 2;
  string default_namespace_name = 3;
}

message TableTypesRequest {

}

message TableTypesResponse {
  repeated TableType table_types = 1;
}

message TableType {
  string table_type = 1;
}

message PrimaryKeysRequest {
  optional string namespace_pattern = 1;
  string table_pattern = 2;
}

message PrimaryKeysResponse {
  repeated PrimaryKey primary_keys = 1;
}

message PrimaryKey {
  optional string database_name = 1;
  optional string namespace_name = 2;
  string table_name = 3;
  string column_name = 4;
  int32 sequence_index = 5;
}

message ImportedKeysRequest {
  optional string namespace_pattern = 1;
  string table_pattern = 2;
}

message ImportedKeysResponse {
  repeated ForeignKey imported_keys = 1;
}

message ForeignKey {
  optional string referenced_database_name = 1;
  optional string referenced_namespace_name = 2;
  string referenced_table_name = 3;
  string referenced_column_name = 4;
  optional string foreign_database_name = 5;
  optional string foreign_namespace_name = 6;
  string foreign_table_name = 7;
  string foreign_column_name = 8;
  int32 sequence_index = 9;
  int32 update_rule = 10;
  int32 delete_rule = 11;
  optional string key_name = 12;
}

message ExportedKeysRequest {
  optional string namespace_pattern = 1;
  string table_pattern = 2;
}

message ExportedKeysResponse {
  repeated ForeignKey exported_keys = 1;
}

message TypesRequest {

}

message TypesResponse {
  repeated Type types = 1;
}

message Type {
  string type_name = 1;
  int32 precision = 2;
  optional string literal_prefix = 3;
  optional string literal_suffix = 4;
  bool is_case_sensitive = 5;
  int32 is_searchable = 6;
  bool is_auto_increment = 7;
  int32 min_scale = 8;
  int32 max_scale = 9;
  int32 radix = 10;
}

message IndexesRequest {
  optional string namespace_pattern = 1;
  optional string table_pattern = 2;
  bool unique = 3;
}

message IndexesResponse{
  repeated Index indexes = 1;
}

message Index {
  string database_name = 1;
  string namespace_name = 2;
  string table_name = 3;
  bool unique = 4;
  string index_name = 5;
  int32 position_index = 6;
  string column_name = 7;
  string location = 8;
  int32 index_type = 9;
}

message SqlStringFunctionsRequest {
}

message SqlSystemFunctionsRequest {
}

message SqlTimeDateFunctionsRequest {
}

message SqlNumericFunctionsRequest {
}

message SqlKeywordsRequest {
}

message MetaStringResponse{
  string string = 1;
}